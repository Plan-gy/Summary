bug1：从现在得到早上6点之间的学习时间
有三种方法：
第一种：
使用Calendar类
			Calendar c = Calendar.getInstance();
	        c.set(Calendar.HOUR_OF_DAY, 6); //设置自己今天想得到的点数
	        c.set(Calendar.MINUTE, 0);
	        c.set(Calendar.SECOND, 0);
	        System.out.println(c.getTime());
第二种：
使用GregorianCalendar，这个是Calendar的子类
			GregorianCalendar calendar=new GregorianCalendar(); 
		   int year=calendar.get(calendar.YEAR);
		   // 月的数值加1，使之变成习惯的月份大小（1～12月）
		   int month=calendar.get(calendar.MONTH)+1; 
		   int today=calendar.get(calendar.DAY_OF_MONTH);
		   String date=year+"-"+month+"-"+today;
		   System.out.println(date);
		   System.out.println(calendar.getTime());
第三种：
使用Date
Date current=new Date();
	        Date date2=new Date();
	        Calendar c2 = Calendar.getInstance();
	        int year2 = date2.getYear();
	        int month2 = date2.getMonth();
	        int day2 = date2.getDay();
	        c.set(year2+1900, month2, day2, 6, 0);	     


要是想得到今天的年月日可以使用Calendar的方法
	        int year1=c.get(calendar.YEAR);
			int month1=calendar.get(calendar.MONTH)+1; 
			int today1=calendar.get(calendar.DAY_OF_MONTH);
			String date1=year1+"-"+month1+"-"+today1;
			System.out.println(date1);


下面是输出结果


判断这个人是组长
先从发布任务的表中得到第一个userID，及Get（0）.getUserid。然后用这个id判断是否
参与了活动，参与了就说明是，因为第一个一般都是组长。

获取自己的签到任务详情列表
刚开始定义一个365天的HashMap，那天打卡就往里面放，等到最后在遍历，找到打卡不是0的
放到数组里面



获得签到任务的详细信息
我先遍历signIn表中这个任务，得到它的开始时间和结束时间，得到天数。
在遍历userSignIn这个表中参与这个任务的人，两个相乘就是总共的签到数
遍历statistics表中这个任务统计，得到所有的已签到数。
遍历statictics每次得到这一天的这个任务的签到名，和所有的名字，id
在遍历user表得到里面的m未签到的名字。放入结果并返回。





接口不通//今天的学习时间
命名不规范//总时间


状态postman测试时learning，而小程序端是resting。
这里刚开始弄的时候以为是今天的所有学习时间，所以处理麻烦，
//                if(u.getEndTime()!=null){
//                    Long endTime = u.getEndTime()/1000;
//                    if(u.getStartTime()>c.getTimeInMillis()){     //开始时间大于当前的6点   说明今天的学习早就开始了
//                        if(comp>startTime && endTime==null){   // 遍历今天的   当前时间大于开始时间    没有结束时间    学习状态
//                            all+=(int)(comp-startTime);
//                        }else if(comp>endTime){       //当前时间大于这次的结束时间    将这些时间加到今天时间内。
//                            all+= (int) (endTime-startTime);
//                        } else{
//                            return JsonUtils.objectToJson("status:[resting]");     //都不满足就说明今天还没开始学习
//                        }
//                    }

后三个数据问题
已经可以得到数据，但是那个每周的学习时间跟日期不对应，无法解决，太难了。

每周分析：先得到今天是周几，然后给日期减7，得到一周前的日期。再根据每日学习时间
表中得到第一条数据，也就是这个人第一天学习的时候，得到那天时间，跟这个时间比较，
看是否是一周前就开始学习了，如果一周前开始学习就设为7，不是一周前就设为真实时间。
在遍历每日学习表判断是不是这一周学习的，是在这一周内就将学习时间加到总时间内，
在放在数组里面看啥时候学习了，平均时间就除以几天就行。打败率也是先得到平均时间
在判断是否击败。




最后的学习数据分析还有问题，得到的总数不是1，就